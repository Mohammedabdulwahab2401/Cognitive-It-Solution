<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='dim' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Afghanistan&quot;'>
        <calculation class='tableau' formula='&quot;Afghanistan&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;American Samoa&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas, The&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Brunei Darussalam&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo, Dem. Rep.&quot;' />
          <member value='&quot;Congo, Rep.&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czech Republic&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt, Arab Rep.&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Faeroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia, The&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guam&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong SAR, China&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran, Islamic Rep.&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Isle of Man&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Korea, Dem. Rep.&quot;' />
          <member value='&quot;Korea, Rep.&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyz Republic&quot;' />
          <member value='&quot;Lao PDR&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao SAR, China&quot;' />
          <member value='&quot;Macedonia, FYR&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia, Fed. Sts.&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russian Federation&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten (Dutch part)&quot;' />
          <member value='&quot;Slovak Republic&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Kitts and Nevis&quot;' />
          <member value='&quot;St. Lucia&quot;' />
          <member value='&quot;St. Martin (French part)&quot;' />
          <member value='&quot;St. Vincent and the Grenadines&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Swaziland&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syrian Arab Republic&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Turks and Caicos Islands&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela, RB&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Virgin Islands (U.S.)&quot;' />
          <member value='&quot;Yemen, Rep.&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
          <member value='&quot;Africa&quot;' />
          <member value='&quot;Asia&quot;' />
          <member value='&quot;Europe&quot;' />
          <member value='&quot;Middle East&quot;' />
          <member value='&quot;Oceania&quot;' />
          <member value='&quot;The Americas&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Module V Dataset (Module V Dataset1)' inline='true' name='federated.00v0i5w0qsb8ea18fvo701avtuiw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Module V Dataset1' name='excel-direct.17ibyid0ll6j8311fu1qd1cuklax'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Mohammed .M/Module V Dataset1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.17ibyid0ll6j8311fu1qd1cuklax' name='Module V Dataset' table='[&apos;Module V Dataset$&apos;]' type='table'>
          <columns gridOrigin='A1:AC2705:no:A1:AC2705:0' header='yes' outcome='6'>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='real' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='real' name='Selected Measure' ordinal='3' />
            <column datatype='string' name='Selected Dimension' ordinal='4' />
            <column datatype='string' name='Country' ordinal='5' />
            <column datatype='integer' name='Days to Start Business' ordinal='6' />
            <column datatype='integer' name='Ease of Business' ordinal='7' />
            <column datatype='integer' name='Energy Usage' ordinal='8' />
            <column datatype='integer' name='GDP' ordinal='9' />
            <column datatype='real' name='Health Exp % GDP' ordinal='10' />
            <column datatype='integer' name='Health Exp/Capita' ordinal='11' />
            <column datatype='integer' name='Hours to do Tax' ordinal='12' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='13' />
            <column datatype='real' name='Internet Usage' ordinal='14' />
            <column datatype='real' name='Lending Interest' ordinal='15' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='16' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='17' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='18' />
            <column datatype='integer' name='Number of Records' ordinal='19' />
            <column datatype='real' name='Population 0-14' ordinal='20' />
            <column datatype='real' name='Population 15-64' ordinal='21' />
            <column datatype='real' name='Population 65+' ordinal='22' />
            <column datatype='integer' name='Population Total' ordinal='23' />
            <column datatype='real' name='Population Urban' ordinal='24' />
            <column datatype='string' name='Region' ordinal='25' />
            <column datatype='integer' name='Tourism Inbound' ordinal='26' />
            <column datatype='integer' name='Tourism Outbound' ordinal='27' />
            <column datatype='date' name='Year' ordinal='28' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Birth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth Rate]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Birth Rate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Tax Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Business Tax Rate]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Business Tax Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CO2 Emissions]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>CO2 Emissions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Selected Measure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Selected Measure]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Selected Measure</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Selected Dimension</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Selected Dimension]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Selected Dimension</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days to Start Business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days to Start Business]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Days to Start Business</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ease of Business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ease of Business]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Ease of Business</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Energy Usage]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Energy Usage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp % GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp % GDP]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Health Exp % GDP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp/Capita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Exp/Capita]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Health Exp/Capita</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hours to do Tax</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hours to do Tax]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Hours to do Tax</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant Mortality Rate]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Infant Mortality Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet Usage]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Internet Usage</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lending Interest]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Lending Interest</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Female</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Female]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Life Expectancy Female</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Male</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Male]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Life Expectancy Male</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile Phone Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile Phone Usage]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Mobile Phone Usage</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 0-14]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Population 0-14</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 15-64]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Population 15-64</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 65+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 65+]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Population 65+</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Total]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Population Total</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Urban]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Population Urban</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Inbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Inbound]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Tourism Inbound</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Outbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Outbound]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Tourism Outbound</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Module V Dataset]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AC2705:no:A1:AC2705:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Business Tax Rate]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Internet Usage]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lending Interest]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mobile Phone Usage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column-instance column='[Business Tax Rate]' derivation='Sum' forecast-column-base='[sum:Business Tax Rate:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Business Tax Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lending Interest]' derivation='Sum' forecast-column-base='[sum:Lending Interest:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Lending Interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Business Tax Rate]' derivation='Sum' name='[sum:Business Tax Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Internet Usage]' derivation='Sum' name='[sum:Internet Usage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lending Interest]' derivation='Sum' name='[sum:Lending Interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mobile Phone Usage]' derivation='Sum' name='[sum:Mobile Phone Usage:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.189504' measure-ordering='alphabetic' measure-percentage='0.769679' parameter-percentage='0.0408163' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Lending Interest:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Business Tax Rate:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>0</bucket>
            </map>
            <map to='#44924e'>
              <bucket>3</bucket>
            </map>
            <map to='#73ba67'>
              <bucket>2</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#24693d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#246a3d'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#246a3d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#246b3d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#246c3d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#246c3d'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#256d3d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#256e3d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#256e3d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#256f3d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#256f3d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#25703d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#25713d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#26713d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#26723d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#26733d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#26733d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#26743d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#26743d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#26753d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#27763d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#27763d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#27773d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#28773d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#28783e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#29793e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#29793e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#297a3f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#2a7a3f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#2a7b3f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#2a7b3f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#2b7c40'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#2b7d40'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#2c7d40'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#2c7e41'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#2c7e41'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#2d7f41'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#2d8042'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#2e8042'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#2e8142'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#2e8142'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#308243'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#318344'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#318444'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#328445'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#338545'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#348546'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#358646'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#368647'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#368747'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#378848'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#388848'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#398949'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#3a8949'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#3a8a4a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#3b8b4a'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#3c8b4b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#3d8c4b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#3e8c4b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#3f8d4c'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#3f8d4c'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#408e4d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#418f4d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#418f4d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#42904d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#43904d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#43914e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#44924e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#45924e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#46934e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#46934e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#47944f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#48944f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#48954f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#49964f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4a964f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4a9750'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4b9750'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4c9850'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4c9850'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4d9950'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#4f9b51'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#509b51'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#519c51'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#529d51'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#529d51'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#539e52'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#549e52'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#559f52'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#559f52'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#56a052'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#57a152'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#58a152'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#58a253'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#5aa353'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#5ba353'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#5ca453'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#5ca553'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#5da553'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#5ea654'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#5ea654'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#5fa755'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#60a855'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#60a856'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#61a956'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#61a957'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#62aa57'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#62aa58'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#63ab59'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#64ac59'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#64ac5a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#65ad5a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#65ad5b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#66ae5b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#66ae5c'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#68b05d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#68b05d'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#69b15e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#69b15e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#6bb360'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#6bb360'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#6cb461'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#6db562'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#6db562'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#6eb663'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#6fb663'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#6fb764'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#70b865'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#71b865'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#71b966'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#72ba67'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#73ba67'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#74bb68'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#74bb68'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#75bc69'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#76bd6a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#76bd6a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#77be6b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#78bf6c'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#78bf6c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79c06d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#7ac06d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#7ac16e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#7bc26f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#7cc26f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#7dc471'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#7ec471'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#7fc572'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#80c572'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#80c673'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#81c774'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#82c774'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#82c875'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#83c976'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#84c976'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86cb78'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#87cc79'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#88cc7a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#89cd7a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#89cd7b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8ace7c'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8bce7c'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8ccf7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8dcf7e'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#8ed07f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8fd07f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#90d180'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#90d281'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#91d281'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#92d382'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#93d383'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#94d484'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#95d484'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#96d585'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#97d586'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#97d687'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#98d687'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#99d789'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9bd78a'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9cd88b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9dd88d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9ed98e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#a0d990'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a1d991'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#a2da93'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#a3da94'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#a5db96'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#a6db97'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a7dc98'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#a8dc9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#aadc9b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#abdd9d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#acdd9e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#addea0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#afdea1'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#b0dfa3'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#b1dfa4'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{2a58f5ff-dfe0-490a-bcf6-90e188abad5d}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Internet Usage:qk]' />
            <field name='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Mobile Phone Usage:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#59a14f' fontname='Tableau Bold'>Forecasting</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Module V Dataset (Module V Dataset1)' name='federated.00v0i5w0qsb8ea18fvo701avtuiw' />
          </datasources>
          <datasource-dependencies datasource='federated.00v0i5w0qsb8ea18fvo701avtuiw'>
            <column datatype='real' name='[Business Tax Rate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lending Interest]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Business Tax Rate]' derivation='Sum' forecast-column-base='[sum:Business Tax Rate:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Business Tax Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lending Interest]' derivation='Sum' forecast-column-base='[sum:Lending Interest:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Lending Interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Business Tax Rate]' derivation='Sum' name='[sum:Business Tax Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lending Interest]' derivation='Sum' name='[sum:Lending Interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Lending Interest:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Business Tax Rate:qk]' value='false' />
            <format attr='break-on-special' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Business Tax Rate:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Business Tax Rate:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Business Tax Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Lending Interest:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Region:nk] * ([federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Business Tax Rate:qk] + [federated.00v0i5w0qsb8ea18fvo701avtuiw].[fVal:sum:Lending Interest:qk]))</rows>
        <cols>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[tyr:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='3' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F960917F-6296-4024-A8C3-257C24BA0219}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#59a14f' fontname='Tableau Bold'>Mobile phone and Internet usage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Module V Dataset (Module V Dataset1)' name='federated.00v0i5w0qsb8ea18fvo701avtuiw' />
          </datasources>
          <datasource-dependencies datasource='federated.00v0i5w0qsb8ea18fvo701avtuiw'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{2a58f5ff-dfe0-490a-bcf6-90e188abad5d}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Internet Usage]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mobile Phone Usage]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Internet Usage]' derivation='Sum' name='[sum:Internet Usage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mobile Phone Usage]' derivation='Sum' name='[sum:Mobile Phone Usage:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' palette='green_10_0' type='palette'>
                  <map to='#24693d'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#44924e'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#73ba67'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#b3e0a6'>
                    <bucket>1</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:AdhocCluster:2:ok]'>
            <groupfilter function='level-members' level='[none:AdhocCluster:2:ok]' />
          </filter>
          <slices>
            <column>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:AdhocCluster:2:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Internet Usage:qk]' value='false' />
            <format attr='break-on-special' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Internet Usage:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Internet Usage:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Country:nk]' />
              <color column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:AdhocCluster:2:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Internet Usage:qk]</rows>
        <cols>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Mobile Phone Usage:qk]</cols>
      </table>
      <simple-id uuid='{20CA4ADC-6BB8-48CB-ABA8-557C9E883470}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#59a14f' fontname='Tableau Bold'>Health Exp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Module V Dataset (Module V Dataset1)' name='federated.00v0i5w0qsb8ea18fvo701avtuiw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00v0i5w0qsb8ea18fvo701avtuiw'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Health Exp % GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Health Exp/Capita]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Health Exp % GDP]' derivation='Sum' name='[sum:Health Exp % GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Exp/Capita]' derivation='Sum' name='[sum:Health Exp/Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp/Capita:qk]' value='false' />
            <format attr='break-on-special' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp/Capita:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp/Capita:qk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Country:nk]' />
              <lod column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <reference-line axis-column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp % GDP:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp % GDP:qk]' z-order='1' />
            <reference-line axis-column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp/Capita:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp/Capita:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp % GDP:qk]</rows>
        <cols>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Health Exp/Capita:qk]</cols>
      </table>
      <simple-id uuid='{C934D7E2-FBF6-4E35-BF5B-C0379D05B309}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources />
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9AD53554-7007-469B-8E97-5DF78270525A}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[:Measure Names]' type='color' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[:Measure Names]</field>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Forecast Indicator:nk]</field>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Region:nk]</field>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[qr:Year:ok]</field>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A65B8BEC-04F0-46A6-8295-839FDEB5BDCE}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:AdhocCluster:2:ok]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='1' param='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:AdhocCluster:1:ok]</field>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:AdhocCluster:2:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A98509A-7BB0-4992-8DC8-CCB3F3E9D1F1}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21CE4692-6179-4946-9158-CCB4BDE8CC07}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v0i5w0qsb8ea18fvo701avtuiw].[sum:Days to Start Business:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E16CAC9-0E1B-4BFB-ACC4-568CCA629747}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
